#! /usr/bin/python
#coding:UTF-8
'''
    @author: neptune
    @time: 2014-02-20
    @descript: 主要记录Pyhon中一些常用的东西.建议宽屏阅读使用
'''
import sys

def demo_help():
    print "快速查找:利用编辑的查找功能查找@关键字。"
    print "\t例如：查找list相关的东西：输入@list"
    print "\t查看运行结果:shell$ ./man.py list"


#===========================================================================================================
#@list
#    演示list相关的用法
#===========================================================================================================
def demo_list():
    "演示list相关的用法"
    print "list类型：属于一种集合类型，它非常灵活，支持在源处修改，可按需增长缩短，可以包含任何类型的对象亦可嵌套"
    
    #define list variable 定义list类型的变量
    li1 = [];
    li2 = [1,2,3,4,5]   
    li3 = [1,2,3,'4',5]
    li4 = [1,'snakeam',['am','pm'],'fun']
    li5 = list("list-variable")
    li6 = list(range(-4,4))
    print "li1:",type(li1),"+\t",li1
    print "li2:",type(li1),"+\t",li2
    print "li3:",type(li1),"+\t",li3
    print "li4:",type(li1),"+\t",li4
    print "li5:",type(li1),"+\t",li5
    print "li6:",type(li1),"+\t",li6
    
    #index  form 0-index
    print li2[0]
    print li3[3]
    print li4[1][1]
    
    #split
    print li2[:3]       #取前三个元素，返回list
    print li3[3:]       #取第三个以后的元素，返回list
    print li3[2:4]      #从第三个开始取到第五个但不包括5
    print li3[-1:]      #取最后一个
    
    #add or del
    li1.append("hello")
    print li1
    li1.insert(0, "xcx")
    print li1
    li1[0:0] =['hmj']
    print li1
    li1[1:1] =['zxy']
    print li1
    li1[len(li1):1]=['world']
    print li1
    li1[-1] =['!','wan an']
    print li1
    
    del li1[0]
    print li1
    li1.remove(li1[0])
    print li1
    li1[2][0:1]=['I']
    print li1
    
    #len
    print len(li1)
    
    #
    
#===========================================================================================================
if __name__ == "__main__":
    #print sys.argv
    if len(sys.argv) ==2:
        selfMod = __import__(__name__)
        return_function = getattr(selfMod,"demo_%s" % sys.argv[1])
        if(callable(selfMod.return_function) and callable(selfMod.return_function)):
                return_function()
    else:
        demo_help()
